{
    "recording_directory":{{ matrix_jitsi_jibri_recording_path|string|to_json }},
    // The path to the script which will be run on completed recordings
    "finalize_recording_script_path": {{ matrix_jitsi_jibri_finalize_recording_script_path|string|to_json }},
    "xmpp_environments": [
        {
            // A friendly name for this environment which can be used
            //  for logging, stats, etc.
            "name": "prod environment",
            // The hosts of the XMPP servers to connect to as part of
            //  this environment
            "xmpp_server_hosts": [
                {{ matrix_jitsi_xmpp_server|string|to_json }}
            ],
            "xmpp_domain": {{ matrix_jitsi_xmpp_domain|string|to_json }},
            // Jibri will login to the xmpp server as a privileged user
            "control_login": {
                "domain": {{ matrix_jitsi_xmpp_auth_domain|string|to_json }},
                // The credentials for logging in
                "username": {{ matrix_jitsi_jibri_xmpp_user|string|to_json }},
                "password": {{ matrix_jitsi_jibri_xmpp_password|string|to_json }}
            },
            // Using the control_login information above, Jibri will join
            //  a control muc as a means of announcing its availability
            //  to provide services for a given environment
            "control_muc": {
                "domain": {{ matrix_jitsi_xmpp_internal_muc_domain|string|to_json }},
                "room_name": {{ matrix_jitsi_jibri_brewery_muc|string|to_json }},
		// MUST be unic for every instanse
                "nickname": "jibri-instanse-1"
            },
            // All participants in a call join a muc so they can exchange
            //  information.  Jibri can be instructed to join a special muc
            //  with credentials to give it special abilities (e.g. not being
            //  displayed to other users like a normal participant)
            "call_login": {
                "domain": {{ matrix_jitsi_recorder_domain|string|to_json }},
                "username": {{ matrix_jitsi_jibri_recorder_user|string|to_json }},
                "password": {{ matrix_jitsi_jibri_recorder_password|string|to_json }}
            },
            // When jibri gets a request to start a service for a room, the room
            //  jid will look like:
            //  roomName@optional.prefixes.subdomain.xmpp_domain
            // We'll build the url for the call by transforming that into:
            //  https://xmpp_domain/subdomain/roomName
            // So if there are any prefixes in the jid (like jitsi meet, which
            //  has its participants join a muc at conference.xmpp_domain) then
            //  list that prefix here so it can be stripped out to generate
            //  the call url correctly
            "room_jid_domain_string_to_strip_from_start": {{ matrix_jitsi_jibri_strip_domain_jid|string|to_json }},
            // The amount of time, in minutes, a service is allowed to continue.
            //  Once a service has been running for this long, it will be
            //  stopped (cleanly).  A value of 0 means an indefinite amount
            //  of time is allowed
            "usage_timeout": "0",
            // Whether or not we'll automatically trust any cert on
            // this XMPP domain
            trust-all-xmpp-certs = true
        }
    ]
}
